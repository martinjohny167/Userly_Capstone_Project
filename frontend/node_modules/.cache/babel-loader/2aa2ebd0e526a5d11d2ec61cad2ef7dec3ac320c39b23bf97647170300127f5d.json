{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL } from './config';\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to handle common headers\naxiosInstance.interceptors.request.use(config => {\n  // Get the auth token from localStorage\n  const user = JSON.parse(localStorage.getItem('user') || 'null');\n  if (user && user.token) {\n    config.headers['Authorization'] = `Bearer ${user.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle unauthorized responses\naxiosInstance.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    // Clear local storage and redirect to login\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","API_BASE_URL","axiosInstance","create","baseURL","headers","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","error","Promise","reject","response","status","removeItem","window","location","href"],"sources":["C:/Users/marti/Downloads/user-management-system-main/user-management-system-main/capetest/frontend/src/api/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\r\nimport { API_BASE_URL } from './config';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add request interceptor to handle common headers\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    // Get the auth token from localStorage\r\n    const user = JSON.parse(localStorage.getItem('user') || 'null');\r\n    if (user && user.token) {\r\n      config.headers['Authorization'] = `Bearer ${user.token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle unauthorized responses\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      // Clear local storage and redirect to login\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,UAAU;AAEvC,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV;EACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC;EAC/D,IAAIJ,IAAI,IAAIA,IAAI,CAACK,KAAK,EAAE;IACtBN,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,IAAI,CAACK,KAAK,EAAE;EAC1D;EACA,OAAON,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAd,aAAa,CAACI,YAAY,CAACa,QAAQ,CAACX,GAAG,CACpCW,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnD;IACAP,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAed,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}