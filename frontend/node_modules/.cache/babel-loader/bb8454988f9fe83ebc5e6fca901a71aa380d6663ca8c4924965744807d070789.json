{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL } from './config';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include user ID in headers\napi.interceptors.request.use(config => {\n  // Get current user from localStorage\n  const user = JSON.parse(localStorage.getItem('user') || 'null');\n\n  // If user exists, add user ID to header\n  if (user && user.id) {\n    config.headers['user-id'] = user.id;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// User API service\nconst userService = {\n  // Authentication\n  login: async credentials => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      return response.data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  },\n  register: async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  },\n  // Get all users\n  getAllUsers: async () => {\n    try {\n      const response = await api.get('/users');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      throw error;\n    }\n  },\n  // Get user by ID\n  getUserById: async id => {\n    try {\n      const response = await api.get(`/users/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching user with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Create a new user\n  createUser: async userData => {\n    try {\n      const response = await api.post('/users', userData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating user:', error);\n      throw error;\n    }\n  },\n  // Update an existing user\n  updateUser: async (id, userData) => {\n    try {\n      const response = await api.put(`/users/${id}`, userData);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating user with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Delete a user\n  deleteUser: async id => {\n    try {\n      const response = await api.delete(`/users/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting user with ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\nexport default userService;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","id","error","Promise","reject","userService","login","credentials","response","post","data","console","register","userData","getAllUsers","get","getUserById","createUser","updateUser","put","deleteUser","delete"],"sources":["C:/Users/marti/Downloads/user-management-system-main/user-management-system-main/capetest/frontend/src/api/userService.js"],"sourcesContent":["import axios from 'axios';\nimport { API_BASE_URL } from './config';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor to include user ID in headers\napi.interceptors.request.use(\n  (config) => {\n    // Get current user from localStorage\n    const user = JSON.parse(localStorage.getItem('user') || 'null');\n    \n    // If user exists, add user ID to header\n    if (user && user.id) {\n      config.headers['user-id'] = user.id;\n    }\n    \n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// User API service\nconst userService = {\n  // Authentication\n  login: async (credentials) => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      return response.data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  },\n\n  register: async (userData) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  },\n\n  // Get all users\n  getAllUsers: async () => {\n    try {\n      const response = await api.get('/users');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      throw error;\n    }\n  },\n\n  // Get user by ID\n  getUserById: async (id) => {\n    try {\n      const response = await api.get(`/users/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching user with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  // Create a new user\n  createUser: async (userData) => {\n    try {\n      const response = await api.post('/users', userData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating user:', error);\n      throw error;\n    }\n  },\n\n  // Update an existing user\n  updateUser: async (id, userData) => {\n    try {\n      const response = await api.put(`/users/${id}`, userData);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating user with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  // Delete a user\n  deleteUser: async (id) => {\n    try {\n      const response = await api.delete(`/users/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting user with ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\nexport default userService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}