name: Deploy to EC2 via ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ${{ secrets.EC2_USER }}
  EC2_KEY: ${{ secrets.EC2_KEY }}
  ECR_BACKEND_REPO: ${{ secrets.ECR_BACKEND_REPO }}
  ECR_FRONTEND_REPO: ${{ secrets.ECR_FRONTEND_REPO }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build backend Docker image
        run: |
          docker build -t $ECR_BACKEND_REPO:latest ./backend

      - name: Build frontend Docker image
        run: |
          docker build -t $ECR_FRONTEND_REPO:latest ./frontend

      - name: Push backend image to ECR
        run: |
          docker push $ECR_BACKEND_REPO:latest

      - name: Push frontend image to ECR
        run: |
          docker push $ECR_FRONTEND_REPO:latest

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          source: "docker-compose.yml"
          target: "~/app"

      - name: SSH and deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          script: |
            cd ~/app
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin $(echo $ECR_BACKEND_REPO | cut -d'/' -f1)
            docker pull $ECR_BACKEND_REPO:latest
            docker pull $ECR_FRONTEND_REPO:latest
            docker-compose down || true
<<<<<<< HEAD
            docker-compose up -d --remove-orphans 
=======
            docker-compose up -d --remove-orphans
>>>>>>> ed4f1b08c0351165600f937aeaf3796a1f429621
